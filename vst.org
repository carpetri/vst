#+TITLE:     Visualización de Series Temporales
#+AUTHOR:    Oscar Perpiñán Lamigueiro
#+DATE: 24 de Octubre de 2014

#+OPTIONS: H:3
#+PROPERTY: eval no
#+PROPERTY: exports both 
#+PROPERTY: results output graphics

* Introducción

** Paquetes
*** CRAN Task View
**** [[http://CRAN.R-project.org/view%3DTimeSeries][CRAN Tasks View ``Time Series Analysis'']]
     - [[http://cran.r-project.org/web/packages/zoo/vignettes/zoo.pdf][zoo]]
     - [[http://cran.r-project.org/web/packages/xts/vignettes/xts.pdf][xts]]
**** Referencias
     - Ripley y Hornik, 2001. [[http://CRAN.R-project.org/doc/Rnews/Rnews_2001-2.pdf][Date Time Classes]]
     - Grothendieck y Petzoldt, 2004. [[http://CRAN.R-project.org/doc/Rnews/Rnews_2004-1.pdf][Date and Time Classes in R]]

*** zoo

- El paquete =zoo= define una clase =S3= y métodos para series temporales.
- Los objetos =zoo= se crean con la función homónima:
  - Los datos pueden ser un vector, una matriz, o un =factor= totalmente ordenados por un vector índice.
  - Este índice puede ser una medida de tiempo, pero no es imprescindible.
- Define dos nuevos índices temporales: =yearmon= y =yearqtr=.
- Incluye métodos asociados a funciones genéricas (=print=, =summary=,
  etc.) y a operaciones matemáticas.
*** zoo: funciones básicas
- =coredata= extrae el contenido de un =zoo= (sin índice temporal).
- =index= extrae el índice temporal.
- =window= extrae una ventana temporal de un =zoo=.
- =merge= y =cbind= unen dos =zoo= teniendo en cuenta los índices temporales.
- =aggregate= parte un =zoo= en grupos definidos por alguna condición
  sobre su índice temporal, calcula una función sobre cada grupo, y
  devuelve la serie temporal agregada.

*** zoo: funciones básicas

- =NA=: =na.omit=, =na.contiguous=, =na.approx=, =na.locf=.

- [[http://cran.r-project.org/web/packages/zoo/vignettes/zoo-read.pdf][Escritura y lectura de datos]]: =write.zoo= y =read.zoo=.

*** xts
- =xts= amplia las funcionalidades de =zoo= implementando la notación
  [[http://en.wikipedia.org/wiki/ISO_8601][ISO:8601]] para extraer subconjuntos de una serie temporal.
- Funciones importantes:
  - =endpoints= identifica los puntos en los que termina una condición.
  - =to.period= cambia la periodicidad de una serie temporal.
  - =period.*= y =apply.*= evaluan una función sobre un conjunto de
    periodos temporales.

** Configuración
*** Cargar en el orden correcto
#+begin_src R
  library(lattice)
  library(ggplot2)
  library(latticeExtra)
  library(zoo)
#+end_src  
*** Tema para =lattice=
#+begin_src R
  myTheme <- custom.theme.2(pch=19, cex=0.7,
                            region=rev(brewer.pal(9,
                                name = 'YlOrRd')),
                            symbol = brewer.pal(n=8,
                                name = "Dark2"))
  myTheme$strip.background$col='transparent'
  myTheme$strip.shingle$col='transparent'
  myTheme$strip.border$col='transparent'
#+end_src  

*** Escalas
#+begin_src R
  xscale.components.custom <- function(...){
      ans <- xscale.components.default(...)
      ans$top=FALSE
      ans}
  yscale.components.custom <- function(...){
      ans <- yscale.components.default(...)
      ans$right=FALSE
      ans}
#+end_src

*** Establecemos opciones por defecto
#+begin_src R
  myArgs <- list(as.table=TRUE,
                 between=list(x=0.5, y=0.2),
                 xscale.components = xscale.components.custom,
                 yscale.components = yscale.components.custom)
  defaultArgs <- lattice.options()$default.args
  
  lattice.options(default.theme = myTheme,
                  default.args = modifyList(defaultArgs, myArgs))
#+end_src


* Serie Temporal Multivariante con Diferente Escala

** Datos

*** Aranjuez

#+begin_src R
  library(zoo)
  load('data/aranjuez.RData')
#+end_src

** Primera aproximación

*** lattice: =xyplot=
#+begin_src R :results output graphics :exports both :file figs/aranjuez.pdf
  ## The layout argument arranges panels in rows
  xyplot(aranjuez, layout=c(1, ncol(aranjuez)))
#+end_src
*** 
#+RESULTS:
[[file:figs/aranjuez.pdf]]

*** ggplot2: =autoplot=
#+begin_src R :results output graphics :exports both :file figs/aranjuezGG.pdf
  autoplot(aranjuez) + facet_free()
#+end_src
*** 
#+RESULTS:
[[file:figs/aranjuezGG.pdf]]

** Anotaciones

*** lattice: Función completa
#+begin_src R :results output graphics :exports both :file figs/aranjuezXblocks.pdf
  library(grid)
  library(latticeExtra)
  
  ## Auxiliary function to extract the year value of a POSIXct time
  ## index
  Year <- function(x)format(x, "%Y")
  
  xyplot(aranjuez, layout=c(1, ncol(aranjuez)),
         strip=FALSE,
         scales=list(y=list(cex=0.6, rot=0)),
         panel=function(x, y, ...){
           ## Alternation of years
           panel.xblocks(x, Year,
                         col = c("lightgray", "white"),
                         border = "darkgray")
           ## Values under the average highlighted with red regions
           panel.xblocks(x, y<mean(y, na.rm=TRUE),
                         col = "indianred1",
                         height=unit(0.1, 'npc'))
           ## Time series
           panel.lines(x, y, col='royalblue4', lwd=0.5, ...)
           ## Label of each time series
           panel.text(x[1], min(y, na.rm=TRUE),
                      names(aranjuez)[panel.number()],
                      cex=0.6, adj=c(0, 0), srt=90, ...)
           ## Triangles to point the maxima and minima 
           idxMax <- which.max(y)
           panel.points(x[idxMax], y[idxMax],
                        col='black', fill='lightblue', pch=24)
           idxMin <- which.min(y)
           panel.points(x[idxMin], y[idxMin],
                        col='black', fill='lightblue', pch=25)
         })
#+end_src

*** lattice: =panel.xblocks=
- Paquetes y función auxiliar
#+begin_src R :eval no :tangle no
  library(grid)
  library(latticeExtra)

  ## Auxiliary function to extract the year value of a POSIXct time
  ## index
  Year <- function(x)format(x, "%Y")
#+end_src

#+begin_src R
## Alternation of years
panel.xblocks(x, Year,
              col = c("lightgray", "white"),
              border = "darkgray")
## Values under the average highlighted with red regions
panel.xblocks(x, y<mean(y, na.rm=TRUE),
                         col = "indianred1",
              height=unit(0.1, 'npc'))
#+end_src
*** lattice: =panel.lines=
#+begin_src R :eval no :tangle no
           ## Time series
           panel.lines(x, y, col='royalblue4', lwd=0.5, ...)
#+end_src

*** lattice: =panel.text=
#+begin_src R :eval no :tangle no
           ## Label of each time series
           panel.text(x[1], min(y, na.rm=TRUE),
                      names(aranjuez)[panel.number()],
                      cex=0.6, adj=c(0, 0), srt=90, ...)
#+end_src

    
*** lattice: =panel.points=
#+begin_src R :eval no :tangle no
           ## Triangles to point the maxima and minima 
           idxMax <- which.max(y)
           panel.points(x[idxMax], y[idxMax],
                        col='black', fill='lightblue', pch=24)
           idxMin <- which.min(y)
           panel.points(x[idxMin], y[idxMin],
                        col='black', fill='lightblue', pch=25)
#+end_src

*** 
#+RESULTS:
[[file:figs/aranjuezXblocks.pdf]]

*** ggplot2: acomodamos datos
- ggplot2 necesita un =data.frame= en formato /long/: =fortify=
#+begin_src R :eval no-export
  timeIdx <- index(aranjuez)
  
  long <- fortify(aranjuez, melt=TRUE)
#+end_src
*** ggplot2
- Bandas de valores por debajo de la media
#+begin_src R :eval no-export
  ## Values below mean are negative after being centered
  scaled <- fortify(scale(aranjuez, scale=FALSE), melt=TRUE)
  ## The 'scaled' column is the result of the centering.
  ## The new 'Value' column store the original values.
  scaled <- transform(scaled, scaled=Value,
                      Value=long$Value)
  underIdx <- which(scaled$scaled <= 0)
  ## 'under' is the subset of values below the average
  under <- scaled[underIdx,]
#+end_src

*** ggplot2

- Bandas consecutivas de años: =xts::endpoints=

#+begin_src R :eval no-export
  library(xts)
  ep <- endpoints(timeIdx, on='years')
  N <- length(ep[-1])
  ## 'tsp' is start and 'tep' is the end of each band
  tep <- timeIdx[ep]
  tsp <- timeIdx[ep[-(N+1)]+1]
  ## 'cols' is a vector with the color of each band
  cols <- rep_len(c('gray', 'white'), N)
#+end_src
*** ggplot2

- Mínimos y máximos.
#+begin_src R :eval no-export
  minIdx <- timeIdx[apply(aranjuez, 2, which.min)]
  minVals <- apply(aranjuez, 2, min, na.rm=TRUE)
  mins <- data.frame(Index=minIdx,
                     Value=minVals,
                     Series=names(aranjuez))
  
  maxIdx <- timeIdx[apply(aranjuez, 2, which.max)]
  maxVals <- apply(aranjuez, 2, max, na.rm=TRUE)
  maxs <- data.frame(Index=maxIdx,
                     Value=maxVals,
                     Series=names(aranjuez))
#+end_src

*** ggplot2: resultado
#+begin_src R :eval no-export
  ggplot(data=long, aes(Index, Value)) +
      ## Time series of each variable
      geom_line(colour = "royalblue4", lwd = 0.5) +
      ## Year bands
      annotate(geom='rect', ymin = -Inf, ymax = Inf,
                xmin=tsp, xmax=tep,
                fill = cols, alpha = 0.4) +
      ## Values below average
      geom_rug(data=under,
               sides='b', col='indianred1') +
      ## Minima
      geom_point(data=mins, pch=25) +
      ## Maxima
      geom_point(data=maxs, pch=24) +
      ## Axis labels and theme definition
      labs(x='Time', y=NULL) +
      theme_bw() +
      ## Each series has different panel and y-scale
      facet_free()
#+end_src


* Serie Temporal Multivariante con Misma Escala

** Primera aproximación
*** Datos
- Medidas de radiación solar en estaciones de Navarra.
#+begin_src R
  load('data/navarra.RData')
#+end_src


*** lattice: =xyplot=
#+begin_src R :results output graphics :exports both :file figs/navarra.pdf
  avRad <- zoo(rowMeans(navarra, na.rm=1),
               index(navarra))
  pNavarra <- xyplot(navarra - avRad,
                     superpose=TRUE, auto.key=FALSE,
                     lwd=0.5, alpha=0.3,
                     col='midnightblue') 
  pNavarra
#+end_src

*** 
#+RESULTS:
[[file:figs/navarra.pdf]]

** Ratio de aspecto, Ratio de Cambio

*** =aspect= y =cut=
- La recomendación general para transmitir adecuadamente el ratio de
  cambio es elegir el ratio entre altura y anchura de la ventana
  gráfica de forma que la orientación de los segmentos que componen la
  serie estén centradas en 45 grados (/banking to 45/)
- En =xyplot= se define con =aspect=, pero hay que usar el método
  cut-and-stack para evitar figuras demasiado anchas.
#+begin_src R :results output graphics :exports both :file figs/navarraBanking.pdf
  xyplot(navarra - avRad,
         aspect='xy', cut=list(n=3, overlap=0.1),
         strip=FALSE,
         superpose=TRUE, auto.key=FALSE,
         lwd=0.5, alpha=0.3, col='midnightblue')
#+end_src
    
*** 
#+RESULTS:
[[file:figs/navarraBanking.pdf]]


** El gráfico de horizonte

*** Gráfico de horizonte

El [[http://www.perceptualedge.com/articles/visual_business_intelligence/time_on_the_horizon.pdf][gráfico de horizonte]] es especialmente útil para mostrar series
temporales de diferencias de forma compacta:
- Comparar series.
- Detectar puntos sobresalientes.

*** Gráfico de horizonte: técnica
- Los valores positivos y negativos comparten el mismo espacio
  vertical (negativos encima del eje horizontal) codificando el signo
  con color (azul-rojo).
- La magnitud de la diferencia se codifica con intensidad del color.
- Las bandas de color comparten la misma referencia, están
  superpuestas, con bandas más oscuras por delante de las claras.

*** =horizonplot=
- Diferencias respecto de la media entre localidades 
#+begin_src R :results output graphics :exports both :file figs/navarraHorizonplot.pdf
  library(latticeExtra)
  
  horizonplot(navarra-avRad,
              layout=c(1, ncol(navarra)),
              origin=0, colorkey=TRUE)
#+end_src

*** 
#+RESULTS:
[[file:figs/navarraHorizonplot.pdf]]

*** =horizonplot=
- Diferencias respecto a la media diaria interanual.
#+begin_src R 
  Ta <- aranjuez$TempAvg
  timeIndex <- index(aranjuez)
  longTa <- ave(Ta, format(timeIndex, '%j'))
  diffTa <- (Ta - longTa)
#+end_src

*** =horizonplot=
- Usamos =cut= para dedicar un panel a cada año.
#+begin_src R :results output graphics :exports both :file figs/diffTa_horizon.pdf
  years <- unique(format(timeIndex, '%Y'))
  
  horizonplot(diffTa, cut=list(n=8, overlap=0),
              colorkey=TRUE, layout=c(1, 8),
              scales=list(draw=FALSE,
                  y=list(relation='same')),
              origin=0, strip.left=FALSE) +
      layer(grid.text(years[panel.number()],
                      x = 0, y = 0.1, 
                      gp=gpar(cex=0.8),
                      just = "left"))
#+end_src

*** 
#+RESULTS:
[[file:figs/diffTa_horizon.pdf]]


* El Tiempo como Variable

** Definir grupos con el índice temporal

*** =splom= y =groups=
#+begin_src R :results output graphics :exports both :file figs/aranjuezSplom.png :width 4000 :height 4000 :res 600
  load('data/aranjuez.RData')
  
  ## Red-Blue palette with black added (12 colors)
  colors <- c(brewer.pal(n=11, 'RdBu'), '#000000')
  ## Rearrange according to months (darkest for summer)
  colors <- colors[c(6:1, 12:7)]
  
  splom(~as.data.frame(aranjuez),
          groups=format(index(aranjuez), '%m'),
        auto.key=list(space='right', 
            title='Month', cex.title=1),
        pscale=0, varname.cex=0.7, xlab='',
          par.settings=custom.theme(symbol=colors,
              pch=19), cex=0.3, alpha=0.1)
#+end_src

*** 
#+RESULTS:
[[file:figs/aranjuezSplom.png]]




** Definir paneles con el índice temporal

*** ggplot2

#+begin_src R :results output graphics :exports both  :width 2000 :height 2000 :res 300 :file figs/aranjuezFacetGrid.png
  ggplot(data=aranjuezRshp,
         aes(Radiation, Temperature)) +
      facet_grid(Statistic ~ month) +
      geom_point(col='skyblue4',
                 pch=19, cex=0.5,
                 alpha=0.3) +
      geom_rug() +
      stat_smooth(se=FALSE, method='loess',
                  col='indianred1', lwd=1.2) +
      theme_bw()
#+end_src

*** 
#+RESULTS:
[[file:figs/aranjuezFacetGrid.png]]


*** lattice
#+begin_src R :results output graphics :exports both :file figs/aranjuezOuterStrips.pdf
  useOuterStrips(xyplot(Temperature ~ Radiation | month * Statistic,
                        data=aranjuezRshp,
                        between=list(x=0),
                        col='skyblue4', pch=19,
                        cex=0.5, alpha=0.3)) +
      layer({
          panel.rug(..., col.line='indianred1',
                    end=0.05, alpha=0.6)
          panel.loess(..., col='indianred1',
                      lwd=1.5, alpha=1)
      })
#+end_src


*** 
#+RESULTS:
[[file:figs/aranjuezOuterStrips.pdf]]


* Gráficos Interactivos
** googleVis

*** googleVis

[[http://decastillo.github.io/googleVis_Tutorial/][Tutorial]]

#+begin_src R
library(googleVis)
#+end_src

*** Ejemplo con datos de Navarra
#+begin_src R

navarraDF <- as.data.frame(navarra)
navarraDF <- stack(navarraDF)
navarraDF$ymd <- index(navarra)

navGVis <- gvisMotionChart(navarraDF,
                           idvar = 'ind', timevar='ymd')

plot(navGVis)
#+end_src

** rCharts

*** rCharts
[[http://ramnathv.github.io/rCharts/]] 

#+begin_src R
library(rCharts)
#+end_src

*** Highcharts

[[http://www.highcharts.com/]]

#+begin_src R
aranjuezDF <- as.data.frame(aranjuez)
## Highcharts necesita que las fechas sean numéricas
aranjuezDF$tt <-
    as.numeric(as.POSIXct(index(aranjuez)))*1000
hp <- hPlot(TempAvg ~ tt, data = aranjuezDF,
            type = 'line')
hp$xAxis(type = 'datetime')
hp
#+end_src

*** Morris

http://morrisjs.github.io/morris.js/

#+begin_src R
mp <- mPlot(x = 'tt', y = c('TempAvg', 'TempMax'),
            data = aranjuezDF,
            type = 'Line')
## Ajustes para Morris            
mp$set(pointSize = 0, lineWidth = 1)
mp
#+end_src

***  

#+LANGUAGE:  es
#+OPTIONS:   num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [xcolor={usenames,svgnames,dvipsnames}]
#+BEAMER_THEME: Goettingen
#+BEAMER_COLOR_THEME: rose
#+BEAMER_FONT_THEME: serif
#+LATEX_HEADER: \AtBeginSubsection[]{\begin{frame}[plain]\tableofcontents[currentsubsection,sectionstyle=show/shaded,subsectionstyle=show/shaded/hide]\end{frame}}
#+LATEX_HEADER: \lstset{keywordstyle=\color{blue}, commentstyle=\color{gray!90}, basicstyle=\ttfamily\small, columns=fullflexible, breaklines=true,linewidth=\textwidth, backgroundcolor=\color{gray!23}, basewidth={0.5em,0.4em}, literate={á}{{\'a}}1 {ñ}{{\~n}}1 {é}{{\'e}}1 {ó}{{\'o}}1 {º}{{\textordmasculine}}1}
#+LATEX_HEADER: \usepackage{mathpazo}
#+LATEX_HEADER: \hypersetup{colorlinks=true, linkcolor=Blue, urlcolor=Blue}
#+LATEX_HEADER: \usepackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{boxwidth=\textwidth, fontsize=\tiny, formatcom = {\color{black!70}}}
#+LATEX_HEADER: \usepackage{animate}
#+PROPERTY:  tangle yes
#+PROPERTY:  comments org
#+PROPERTY: session *R*


